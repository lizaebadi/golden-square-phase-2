{{PROBLEM}} Class Design Recipe

1. Describe the Problem

Put or write the user story here. Add any clarifying notes you might have.

# As a user
# So that I can keep track of my tasks
# I want a program that I can add todo tasks to and see a list of them.



# As a user
# So that I can focus on tasks to complete
# I want to mark tasks as complete and have them disappear from the list.

2. Design the Class Interface

Include the initializer and public methods with all parameters and return values.

class Todo
  def initialize # text is a string
  # ...
  end 

  def list(add_tasks) # add_tasks is a string that the user inputs
   #  does not return anything 
  end 

  def tasks 
  # returns an array of tasks from the list method  
  end

  def completed_tasks(add_completed_tasks) #add_completed_tasks is a string 
    # returns nothing 
  end 

  def list_remaining_tasks 
    # returns an array of tasks 
  end 
end


# EXAMPLE

class Reminder
  def initialize(name) # name is a string
    # ...
  end

  def remind_me_to(task) # task is a string
    # No return value
  end

  def remind()
    # Throws an exception if no task is set
    # Otherwise, returns a string reminding the user to do the task
  end
end
3. Create Examples as Tests

Make a list of examples of how the class will behave in different situations.

# 1
todo = Todo.new
todo.list("Buy apples")
todo.list("Read book")
todo.list("Clean room")
todo.tasks # => ["Buy apples", "Read book", "Clean room"]

# 2 
todo = Todo.new
todo.list("Buy apples")
todo.list("Read book")
todo.list("Clean room")
todo.completed_tasks("Read book")
todo.list_remaining_tasks # => ["Buy apples", "Clean room"]

# 3 
todo = Todo.new
todo.list("Buy apples")
todo.list("Read book")
todo.list("Clean room")
todo.completed_tasks("Read book") 
todo.completed_tasks("Buy apples") 
todo.list_remaining_tasks # => ["Clean room"]




# EXAMPLE

# 1
reminder = Reminder("Kay")
reminder.remind_me_to("Walk the dog")
reminder.remind() # => "Walk the dog, Kay!"

# 2
reminder = Reminder("Kay")
reminder.remind() # fails with "No task set."

# 3
reminder = Reminder("Kay")
reminder.remind_me_to("")
reminder.remind() # => ", Kay!"
Encode each example as a test. You can add to the above list as you go.

4. Implement the Behaviour

After each test you write, follow the test-driving process of red, green, refactor to implement the behaviour.